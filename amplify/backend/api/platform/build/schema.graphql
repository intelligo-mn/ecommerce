
type Profile @aws_iam @aws_api_key {
  id: String
  avatar: Attachment
  bio: String
  socials: [Social!]
  contact: String
}

type AttributeValue @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: Int
  value: String
  meta: String
}

enum WithdrawStatus {
  APPROVED
  PROCCESSING
  REJECTED
  PENDING
  ON_HOLD
}

type Withdraw @aws_iam @aws_api_key {
  id: ID!
  amount: String
  status: WithdrawStatus
  paymentMethod: String
  details: String
  note: String
  organizationID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Banner @aws_iam @aws_api_key {
  id: ID!
  title: String
  description: String
  image: Attachment
  typeID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type TypeSettings @aws_iam @aws_api_key {
  isHome: Boolean
  layoutType: String
  productCard: String
}

type Type @aws_iam @aws_api_key {
  id: ID!
  name: String
  slug: String
  promotionalSliders: String
  settings: TypeSettings
  icon: String
  banners(filter: ModelBannerFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelBannerConnection
  categories(filter: ModelCategoryFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelCategoryConnection
  entities(filter: ModelEntityFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelEntityConnection
  tags(filter: ModelTagFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelTagConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Tag @aws_iam @aws_api_key {
  id: ID!
  name: String
  slug: String
  details: String
  image: Attachment
  icon: String
  entities(filter: ModelEntityFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelEntityConnection
  typeID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type PaymentInfo @aws_iam @aws_api_key {
  account: String
  name: String
  email: String
  bank: String
}

type Balance @aws_iam @aws_api_key {
  id: ID!
  adminCommissionRate: String
  totalEarnings: String
  withdrawnAmount: String
  currentBalance: String
  paymentInfo: PaymentInfo
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Organization @aws_iam @aws_api_key {
  id: ID!
  isActive: String
  name: String
  slug: String
  description: String
  coverImage: Attachment
  logo: Attachment
  address: UserAddress
  settings: String
  attributes(filter: ModelAttributeFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelAttributeConnection
  orders(filter: ModelOrderFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelOrderConnection
  entities(filter: ModelEntityFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelEntityConnection
  staffs(filter: ModelUserFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserConnection
  balance: Balance
  withdraws(filter: ModelWithdrawFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelWithdrawConnection
  users(filter: ModelUserOrganizationFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserOrganizationConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  organizationBalanceId: ID
}

enum ShippingType {
  FIXED
  PERCENTAGE
  FREE
}

type Shipping @aws_iam @aws_api_key {
  id: ID!
  name: String
  amount: String
  isGlobal: String
  type: ShippingType
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Social @aws_iam @aws_api_key {
  type: String
  link: String
}

type EntityVariationOption @aws_iam @aws_api_key {
  name: String
  value: String
}

type EntityVariation @aws_iam @aws_api_key {
  id: ID!
  title: String
  price: Float
  sku: String
  isDisable: Boolean
  salePrice: Float
  quantity: Int
  options: EntityVariationOption
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

enum EntityStatus {
  PUBLISH
  DRAFT
}

enum EntityType {
  PRODUCT
  EVENT
  BOOK
}

type Entity @aws_iam @aws_api_key {
  id: ID!
  name: String
  slug: String
  entityType: EntityType
  description: String
  inStock: Boolean
  isTaxable: String
  salePrice: String
  maxPrice: String
  minPrice: String
  sku: String
  gallery: [Attachment]
  image: Attachment
  status: EntityStatus
  height: String
  lenght: String
  width: String
  price: Float
  quantity: Int
  unit: String
  categories(filter: ModelEntityCategoryFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelEntityCategoryConnection
  orderID: ID!
  organizationID: ID!
  tagID: ID!
  typeID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

enum PaymentGateway {
  QPAY
  SOCIAL_PAY
  CASH_ON_DELIVERY
  BANK_TRANSACTION
  CARD
}

type Order @aws_iam @aws_api_key {
  id: ID!
  trakingNumber: String
  amount: String
  paidTotal: String
  discount: String
  deliveryFee: String
  deliveryTime: String
  billingAddress: UserAddress
  shippingAddress: UserAddress
  paymentGateway: PaymentGateway
  couponID: ID!
  entities(filter: ModelEntityFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelEntityConnection
  userID: ID!
  organizationID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

enum CouponType {
  FIXED_COUPON
  PERCENTAGE_COUPON
  FREE_SHIPPING_COUPON
}

type Coupon @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  code: String
  description: String
  type: CouponType
  image: Attachment
  isValid: Boolean
  amount: Float
  activeFrom: String
  expireAt: String
  orders(filter: ModelOrderFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelOrderConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Contact @aws_iam @aws_api_key {
  id: ID!
  subject: String
  email: String
  name: String
  description: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Attachment @aws_iam @aws_api_key @aws_cognito_user_pools {
  thumbnail: String
  original: String
}

type Category @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  name: String
  slug: String
  details: String
  image: Attachment
  icon: String
  entities(filter: ModelEntityCategoryFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelEntityCategoryConnection
  typeID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Attribute @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  name: String
  slug: String
  organizationID: ID!
  values: AttributeValue
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type User @aws_iam @aws_api_key {
  id: ID!
  name: String
  email: String
  isActiive: String
  orders(filter: ModelOrderFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelOrderConnection
  organizationID: ID!
  organizations(filter: ModelUserOrganizationFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelUserOrganizationConnection
  profile: Profile
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type UserAddress @aws_iam @aws_api_key @aws_cognito_user_pools {
  streetAddress: String
  country: String
  city: String
  state: String
  zip: String
}

enum AddressType {
  BILLING
  SHIPPING
}

type Address @aws_iam @aws_cognito_user_pools {
  id: ID!
  title: String
  default: Boolean
  address: UserAddress
  type: AddressType
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  owner: String
}

type UserOrganization @aws_iam @aws_api_key {
  id: ID!
  organizationID: ID!
  userID: ID!
  organization: Organization!
  user: User!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type EntityCategory @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  entityID: ID!
  categoryID: ID!
  entity: Entity!
  category: Category!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelWithdrawConnection @aws_api_key @aws_iam {
  items: [Withdraw]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelWithdrawStatusInput {
  eq: WithdrawStatus
  ne: WithdrawStatus
}

input ModelWithdrawFilterInput {
  id: ModelIDInput
  amount: ModelStringInput
  status: ModelWithdrawStatusInput
  paymentMethod: ModelStringInput
  details: ModelStringInput
  note: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelWithdrawFilterInput]
  or: [ModelWithdrawFilterInput]
  not: ModelWithdrawFilterInput
}

type Query {
  getWithdraw(id: ID!): Withdraw @aws_api_key @aws_iam
  listWithdraws(filter: ModelWithdrawFilterInput, limit: Int, nextToken: String): ModelWithdrawConnection @aws_api_key @aws_iam
  syncWithdraws(filter: ModelWithdrawFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelWithdrawConnection @aws_api_key @aws_iam
  getBanner(id: ID!): Banner @aws_api_key @aws_iam
  listBanners(filter: ModelBannerFilterInput, limit: Int, nextToken: String): ModelBannerConnection @aws_api_key @aws_iam
  syncBanners(filter: ModelBannerFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelBannerConnection @aws_api_key @aws_iam
  getType(id: ID!): Type @aws_api_key @aws_iam
  listTypes(filter: ModelTypeFilterInput, limit: Int, nextToken: String): ModelTypeConnection @aws_api_key @aws_iam
  syncTypes(filter: ModelTypeFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelTypeConnection @aws_api_key @aws_iam
  getTag(id: ID!): Tag @aws_api_key @aws_iam
  listTags(filter: ModelTagFilterInput, limit: Int, nextToken: String): ModelTagConnection @aws_api_key @aws_iam
  syncTags(filter: ModelTagFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelTagConnection @aws_api_key @aws_iam
  getBalance(id: ID!): Balance @aws_api_key @aws_iam
  listBalances(filter: ModelBalanceFilterInput, limit: Int, nextToken: String): ModelBalanceConnection @aws_api_key @aws_iam
  syncBalances(filter: ModelBalanceFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelBalanceConnection @aws_api_key @aws_iam
  getOrganization(id: ID!): Organization @aws_api_key @aws_iam
  listOrganizations(filter: ModelOrganizationFilterInput, limit: Int, nextToken: String): ModelOrganizationConnection @aws_api_key @aws_iam
  syncOrganizations(filter: ModelOrganizationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelOrganizationConnection @aws_api_key @aws_iam
  getShipping(id: ID!): Shipping @aws_api_key @aws_iam
  listShippings(filter: ModelShippingFilterInput, limit: Int, nextToken: String): ModelShippingConnection @aws_api_key @aws_iam
  syncShippings(filter: ModelShippingFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelShippingConnection @aws_api_key @aws_iam
  getEntityVariation(id: ID!): EntityVariation @aws_api_key @aws_iam
  listEntityVariations(filter: ModelEntityVariationFilterInput, limit: Int, nextToken: String): ModelEntityVariationConnection @aws_api_key @aws_iam
  syncEntityVariations(filter: ModelEntityVariationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelEntityVariationConnection @aws_api_key @aws_iam
  getEntity(id: ID!): Entity @aws_api_key @aws_iam
  listEntities(filter: ModelEntityFilterInput, limit: Int, nextToken: String): ModelEntityConnection @aws_api_key @aws_iam
  syncEntities(filter: ModelEntityFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelEntityConnection @aws_api_key @aws_iam
  getOrder(id: ID!): Order @aws_api_key @aws_iam
  listOrders(filter: ModelOrderFilterInput, limit: Int, nextToken: String): ModelOrderConnection @aws_api_key @aws_iam
  syncOrders(filter: ModelOrderFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelOrderConnection @aws_api_key @aws_iam
  getCoupon(id: ID!): Coupon @aws_api_key @aws_iam @aws_cognito_user_pools
  listCoupons(filter: ModelCouponFilterInput, limit: Int, nextToken: String): ModelCouponConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  syncCoupons(filter: ModelCouponFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCouponConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  getContact(id: ID!): Contact @aws_api_key @aws_iam
  listContacts(filter: ModelContactFilterInput, limit: Int, nextToken: String): ModelContactConnection @aws_api_key @aws_iam
  syncContacts(filter: ModelContactFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelContactConnection @aws_api_key @aws_iam
  getCategory(id: ID!): Category @aws_api_key @aws_iam @aws_cognito_user_pools
  listCategories(filter: ModelCategoryFilterInput, limit: Int, nextToken: String): ModelCategoryConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  syncCategories(filter: ModelCategoryFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCategoryConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  getAttribute(id: ID!): Attribute @aws_api_key @aws_iam @aws_cognito_user_pools
  listAttributes(filter: ModelAttributeFilterInput, limit: Int, nextToken: String): ModelAttributeConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  syncAttributes(filter: ModelAttributeFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelAttributeConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  getUser(id: ID!): User @aws_api_key @aws_iam
  listUsers(filter: ModelUserFilterInput, limit: Int, nextToken: String): ModelUserConnection @aws_api_key @aws_iam
  syncUsers(filter: ModelUserFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUserConnection @aws_api_key @aws_iam
  getAddress(id: ID!): Address @aws_iam @aws_cognito_user_pools
  listAddresses(filter: ModelAddressFilterInput, limit: Int, nextToken: String): ModelAddressConnection @aws_iam @aws_cognito_user_pools
  syncAddresses(filter: ModelAddressFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelAddressConnection @aws_iam @aws_cognito_user_pools
  getUserOrganization(id: ID!): UserOrganization @aws_api_key @aws_iam
  listUserOrganizations(filter: ModelUserOrganizationFilterInput, limit: Int, nextToken: String): ModelUserOrganizationConnection @aws_api_key @aws_iam
  syncUserOrganizations(filter: ModelUserOrganizationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUserOrganizationConnection @aws_api_key @aws_iam
  getEntityCategory(id: ID!): EntityCategory @aws_api_key @aws_iam @aws_cognito_user_pools
  listEntityCategories(filter: ModelEntityCategoryFilterInput, limit: Int, nextToken: String): ModelEntityCategoryConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  syncEntityCategories(filter: ModelEntityCategoryFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelEntityCategoryConnection @aws_api_key @aws_iam @aws_cognito_user_pools
}

input ModelWithdrawConditionInput {
  amount: ModelStringInput
  status: ModelWithdrawStatusInput
  paymentMethod: ModelStringInput
  details: ModelStringInput
  note: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelWithdrawConditionInput]
  or: [ModelWithdrawConditionInput]
  not: ModelWithdrawConditionInput
}

input CreateWithdrawInput {
  id: ID
  amount: String
  status: WithdrawStatus
  paymentMethod: String
  details: String
  note: String
  organizationID: ID!
  _version: Int
}

input UpdateWithdrawInput {
  id: ID!
  amount: String
  status: WithdrawStatus
  paymentMethod: String
  details: String
  note: String
  organizationID: ID
  _version: Int
}

input DeleteWithdrawInput {
  id: ID!
  _version: Int
}

type Mutation {
  createWithdraw(input: CreateWithdrawInput!, condition: ModelWithdrawConditionInput): Withdraw @aws_api_key @aws_iam
  updateWithdraw(input: UpdateWithdrawInput!, condition: ModelWithdrawConditionInput): Withdraw @aws_api_key @aws_iam
  deleteWithdraw(input: DeleteWithdrawInput!, condition: ModelWithdrawConditionInput): Withdraw @aws_api_key @aws_iam
  createBanner(input: CreateBannerInput!, condition: ModelBannerConditionInput): Banner @aws_api_key @aws_iam
  updateBanner(input: UpdateBannerInput!, condition: ModelBannerConditionInput): Banner @aws_api_key @aws_iam
  deleteBanner(input: DeleteBannerInput!, condition: ModelBannerConditionInput): Banner @aws_api_key @aws_iam
  createType(input: CreateTypeInput!, condition: ModelTypeConditionInput): Type @aws_api_key @aws_iam
  updateType(input: UpdateTypeInput!, condition: ModelTypeConditionInput): Type @aws_api_key @aws_iam
  deleteType(input: DeleteTypeInput!, condition: ModelTypeConditionInput): Type @aws_api_key @aws_iam
  createTag(input: CreateTagInput!, condition: ModelTagConditionInput): Tag @aws_api_key @aws_iam
  updateTag(input: UpdateTagInput!, condition: ModelTagConditionInput): Tag @aws_api_key @aws_iam
  deleteTag(input: DeleteTagInput!, condition: ModelTagConditionInput): Tag @aws_api_key @aws_iam
  createBalance(input: CreateBalanceInput!, condition: ModelBalanceConditionInput): Balance @aws_api_key @aws_iam
  updateBalance(input: UpdateBalanceInput!, condition: ModelBalanceConditionInput): Balance @aws_api_key @aws_iam
  deleteBalance(input: DeleteBalanceInput!, condition: ModelBalanceConditionInput): Balance @aws_api_key @aws_iam
  createOrganization(input: CreateOrganizationInput!, condition: ModelOrganizationConditionInput): Organization @aws_api_key @aws_iam
  updateOrganization(input: UpdateOrganizationInput!, condition: ModelOrganizationConditionInput): Organization @aws_api_key @aws_iam
  deleteOrganization(input: DeleteOrganizationInput!, condition: ModelOrganizationConditionInput): Organization @aws_api_key @aws_iam
  createShipping(input: CreateShippingInput!, condition: ModelShippingConditionInput): Shipping @aws_api_key @aws_iam
  updateShipping(input: UpdateShippingInput!, condition: ModelShippingConditionInput): Shipping @aws_api_key @aws_iam
  deleteShipping(input: DeleteShippingInput!, condition: ModelShippingConditionInput): Shipping @aws_api_key @aws_iam
  createEntityVariation(input: CreateEntityVariationInput!, condition: ModelEntityVariationConditionInput): EntityVariation @aws_api_key @aws_iam
  updateEntityVariation(input: UpdateEntityVariationInput!, condition: ModelEntityVariationConditionInput): EntityVariation @aws_api_key @aws_iam
  deleteEntityVariation(input: DeleteEntityVariationInput!, condition: ModelEntityVariationConditionInput): EntityVariation @aws_api_key @aws_iam
  createEntity(input: CreateEntityInput!, condition: ModelEntityConditionInput): Entity @aws_api_key @aws_iam
  updateEntity(input: UpdateEntityInput!, condition: ModelEntityConditionInput): Entity @aws_api_key @aws_iam
  deleteEntity(input: DeleteEntityInput!, condition: ModelEntityConditionInput): Entity @aws_api_key @aws_iam
  createOrder(input: CreateOrderInput!, condition: ModelOrderConditionInput): Order @aws_api_key @aws_iam
  updateOrder(input: UpdateOrderInput!, condition: ModelOrderConditionInput): Order @aws_api_key @aws_iam
  deleteOrder(input: DeleteOrderInput!, condition: ModelOrderConditionInput): Order @aws_api_key @aws_iam
  createCoupon(input: CreateCouponInput!, condition: ModelCouponConditionInput): Coupon @aws_iam @aws_cognito_user_pools
  updateCoupon(input: UpdateCouponInput!, condition: ModelCouponConditionInput): Coupon @aws_iam @aws_cognito_user_pools
  deleteCoupon(input: DeleteCouponInput!, condition: ModelCouponConditionInput): Coupon @aws_iam @aws_cognito_user_pools
  createContact(input: CreateContactInput!, condition: ModelContactConditionInput): Contact @aws_api_key @aws_iam
  updateContact(input: UpdateContactInput!, condition: ModelContactConditionInput): Contact @aws_api_key @aws_iam
  deleteContact(input: DeleteContactInput!, condition: ModelContactConditionInput): Contact @aws_api_key @aws_iam
  createCategory(input: CreateCategoryInput!, condition: ModelCategoryConditionInput): Category @aws_iam @aws_cognito_user_pools
  updateCategory(input: UpdateCategoryInput!, condition: ModelCategoryConditionInput): Category @aws_iam @aws_cognito_user_pools
  deleteCategory(input: DeleteCategoryInput!, condition: ModelCategoryConditionInput): Category @aws_iam @aws_cognito_user_pools
  createAttribute(input: CreateAttributeInput!, condition: ModelAttributeConditionInput): Attribute @aws_iam @aws_cognito_user_pools
  updateAttribute(input: UpdateAttributeInput!, condition: ModelAttributeConditionInput): Attribute @aws_iam @aws_cognito_user_pools
  deleteAttribute(input: DeleteAttributeInput!, condition: ModelAttributeConditionInput): Attribute @aws_iam @aws_cognito_user_pools
  createUser(input: CreateUserInput!, condition: ModelUserConditionInput): User @aws_api_key @aws_iam
  updateUser(input: UpdateUserInput!, condition: ModelUserConditionInput): User @aws_api_key @aws_iam
  deleteUser(input: DeleteUserInput!, condition: ModelUserConditionInput): User @aws_api_key @aws_iam
  createAddress(input: CreateAddressInput!, condition: ModelAddressConditionInput): Address @aws_iam @aws_cognito_user_pools
  updateAddress(input: UpdateAddressInput!, condition: ModelAddressConditionInput): Address @aws_iam @aws_cognito_user_pools
  deleteAddress(input: DeleteAddressInput!, condition: ModelAddressConditionInput): Address @aws_iam @aws_cognito_user_pools
  createUserOrganization(input: CreateUserOrganizationInput!, condition: ModelUserOrganizationConditionInput): UserOrganization @aws_api_key @aws_iam
  updateUserOrganization(input: UpdateUserOrganizationInput!, condition: ModelUserOrganizationConditionInput): UserOrganization @aws_api_key @aws_iam
  deleteUserOrganization(input: DeleteUserOrganizationInput!, condition: ModelUserOrganizationConditionInput): UserOrganization @aws_api_key @aws_iam
  createEntityCategory(input: CreateEntityCategoryInput!, condition: ModelEntityCategoryConditionInput): EntityCategory @aws_iam @aws_cognito_user_pools
  updateEntityCategory(input: UpdateEntityCategoryInput!, condition: ModelEntityCategoryConditionInput): EntityCategory @aws_iam @aws_cognito_user_pools
  deleteEntityCategory(input: DeleteEntityCategoryInput!, condition: ModelEntityCategoryConditionInput): EntityCategory @aws_iam @aws_cognito_user_pools
}

type Subscription {
  onCreateWithdraw: Withdraw @aws_subscribe(mutations: ["createWithdraw"]) @aws_api_key @aws_iam
  onUpdateWithdraw: Withdraw @aws_subscribe(mutations: ["updateWithdraw"]) @aws_api_key @aws_iam
  onDeleteWithdraw: Withdraw @aws_subscribe(mutations: ["deleteWithdraw"]) @aws_api_key @aws_iam
  onCreateBanner: Banner @aws_subscribe(mutations: ["createBanner"]) @aws_api_key @aws_iam
  onUpdateBanner: Banner @aws_subscribe(mutations: ["updateBanner"]) @aws_api_key @aws_iam
  onDeleteBanner: Banner @aws_subscribe(mutations: ["deleteBanner"]) @aws_api_key @aws_iam
  onCreateType: Type @aws_subscribe(mutations: ["createType"]) @aws_api_key @aws_iam
  onUpdateType: Type @aws_subscribe(mutations: ["updateType"]) @aws_api_key @aws_iam
  onDeleteType: Type @aws_subscribe(mutations: ["deleteType"]) @aws_api_key @aws_iam
  onCreateTag: Tag @aws_subscribe(mutations: ["createTag"]) @aws_api_key @aws_iam
  onUpdateTag: Tag @aws_subscribe(mutations: ["updateTag"]) @aws_api_key @aws_iam
  onDeleteTag: Tag @aws_subscribe(mutations: ["deleteTag"]) @aws_api_key @aws_iam
  onCreateBalance: Balance @aws_subscribe(mutations: ["createBalance"]) @aws_api_key @aws_iam
  onUpdateBalance: Balance @aws_subscribe(mutations: ["updateBalance"]) @aws_api_key @aws_iam
  onDeleteBalance: Balance @aws_subscribe(mutations: ["deleteBalance"]) @aws_api_key @aws_iam
  onCreateOrganization: Organization @aws_subscribe(mutations: ["createOrganization"]) @aws_api_key @aws_iam
  onUpdateOrganization: Organization @aws_subscribe(mutations: ["updateOrganization"]) @aws_api_key @aws_iam
  onDeleteOrganization: Organization @aws_subscribe(mutations: ["deleteOrganization"]) @aws_api_key @aws_iam
  onCreateShipping: Shipping @aws_subscribe(mutations: ["createShipping"]) @aws_api_key @aws_iam
  onUpdateShipping: Shipping @aws_subscribe(mutations: ["updateShipping"]) @aws_api_key @aws_iam
  onDeleteShipping: Shipping @aws_subscribe(mutations: ["deleteShipping"]) @aws_api_key @aws_iam
  onCreateEntityVariation: EntityVariation @aws_subscribe(mutations: ["createEntityVariation"]) @aws_api_key @aws_iam
  onUpdateEntityVariation: EntityVariation @aws_subscribe(mutations: ["updateEntityVariation"]) @aws_api_key @aws_iam
  onDeleteEntityVariation: EntityVariation @aws_subscribe(mutations: ["deleteEntityVariation"]) @aws_api_key @aws_iam
  onCreateEntity: Entity @aws_subscribe(mutations: ["createEntity"]) @aws_api_key @aws_iam
  onUpdateEntity: Entity @aws_subscribe(mutations: ["updateEntity"]) @aws_api_key @aws_iam
  onDeleteEntity: Entity @aws_subscribe(mutations: ["deleteEntity"]) @aws_api_key @aws_iam
  onCreateOrder: Order @aws_subscribe(mutations: ["createOrder"]) @aws_api_key @aws_iam
  onUpdateOrder: Order @aws_subscribe(mutations: ["updateOrder"]) @aws_api_key @aws_iam
  onDeleteOrder: Order @aws_subscribe(mutations: ["deleteOrder"]) @aws_api_key @aws_iam
  onCreateCoupon: Coupon @aws_subscribe(mutations: ["createCoupon"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onUpdateCoupon: Coupon @aws_subscribe(mutations: ["updateCoupon"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onDeleteCoupon: Coupon @aws_subscribe(mutations: ["deleteCoupon"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onCreateContact: Contact @aws_subscribe(mutations: ["createContact"]) @aws_api_key @aws_iam
  onUpdateContact: Contact @aws_subscribe(mutations: ["updateContact"]) @aws_api_key @aws_iam
  onDeleteContact: Contact @aws_subscribe(mutations: ["deleteContact"]) @aws_api_key @aws_iam
  onCreateCategory: Category @aws_subscribe(mutations: ["createCategory"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onUpdateCategory: Category @aws_subscribe(mutations: ["updateCategory"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onDeleteCategory: Category @aws_subscribe(mutations: ["deleteCategory"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onCreateAttribute: Attribute @aws_subscribe(mutations: ["createAttribute"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onUpdateAttribute: Attribute @aws_subscribe(mutations: ["updateAttribute"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onDeleteAttribute: Attribute @aws_subscribe(mutations: ["deleteAttribute"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onCreateUser: User @aws_subscribe(mutations: ["createUser"]) @aws_api_key @aws_iam
  onUpdateUser: User @aws_subscribe(mutations: ["updateUser"]) @aws_api_key @aws_iam
  onDeleteUser: User @aws_subscribe(mutations: ["deleteUser"]) @aws_api_key @aws_iam
  onCreateAddress(owner: String): Address @aws_subscribe(mutations: ["createAddress"]) @aws_iam @aws_cognito_user_pools
  onUpdateAddress(owner: String): Address @aws_subscribe(mutations: ["updateAddress"]) @aws_iam @aws_cognito_user_pools
  onDeleteAddress(owner: String): Address @aws_subscribe(mutations: ["deleteAddress"]) @aws_iam @aws_cognito_user_pools
  onCreateUserOrganization: UserOrganization @aws_subscribe(mutations: ["createUserOrganization"]) @aws_api_key @aws_iam
  onUpdateUserOrganization: UserOrganization @aws_subscribe(mutations: ["updateUserOrganization"]) @aws_api_key @aws_iam
  onDeleteUserOrganization: UserOrganization @aws_subscribe(mutations: ["deleteUserOrganization"]) @aws_api_key @aws_iam
  onCreateEntityCategory: EntityCategory @aws_subscribe(mutations: ["createEntityCategory"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onUpdateEntityCategory: EntityCategory @aws_subscribe(mutations: ["updateEntityCategory"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onDeleteEntityCategory: EntityCategory @aws_subscribe(mutations: ["deleteEntityCategory"]) @aws_api_key @aws_iam @aws_cognito_user_pools
}

input AttachmentInput {
  thumbnail: String
  original: String
}

type ModelBannerConnection @aws_api_key @aws_iam {
  items: [Banner]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelBannerFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  description: ModelStringInput
  typeID: ModelIDInput
  and: [ModelBannerFilterInput]
  or: [ModelBannerFilterInput]
  not: ModelBannerFilterInput
}

input ModelBannerConditionInput {
  title: ModelStringInput
  description: ModelStringInput
  typeID: ModelIDInput
  and: [ModelBannerConditionInput]
  or: [ModelBannerConditionInput]
  not: ModelBannerConditionInput
}

input CreateBannerInput {
  id: ID
  title: String
  description: String
  image: AttachmentInput
  typeID: ID!
  _version: Int
}

input UpdateBannerInput {
  id: ID!
  title: String
  description: String
  image: AttachmentInput
  typeID: ID
  _version: Int
}

input DeleteBannerInput {
  id: ID!
  _version: Int
}

input TypeSettingsInput {
  isHome: Boolean
  layoutType: String
  productCard: String
}

type ModelTypeConnection @aws_api_key @aws_iam {
  items: [Type]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelTypeFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  slug: ModelStringInput
  promotionalSliders: ModelStringInput
  icon: ModelStringInput
  and: [ModelTypeFilterInput]
  or: [ModelTypeFilterInput]
  not: ModelTypeFilterInput
}

input ModelTypeConditionInput {
  name: ModelStringInput
  slug: ModelStringInput
  promotionalSliders: ModelStringInput
  icon: ModelStringInput
  and: [ModelTypeConditionInput]
  or: [ModelTypeConditionInput]
  not: ModelTypeConditionInput
}

input CreateTypeInput {
  id: ID
  name: String
  slug: String
  promotionalSliders: String
  settings: TypeSettingsInput
  icon: String
  _version: Int
}

input UpdateTypeInput {
  id: ID!
  name: String
  slug: String
  promotionalSliders: String
  settings: TypeSettingsInput
  icon: String
  _version: Int
}

input DeleteTypeInput {
  id: ID!
  _version: Int
}

type ModelTagConnection @aws_iam @aws_api_key {
  items: [Tag]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelTagFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  slug: ModelStringInput
  details: ModelStringInput
  icon: ModelStringInput
  typeID: ModelIDInput
  and: [ModelTagFilterInput]
  or: [ModelTagFilterInput]
  not: ModelTagFilterInput
}

input ModelTagConditionInput {
  name: ModelStringInput
  slug: ModelStringInput
  details: ModelStringInput
  icon: ModelStringInput
  typeID: ModelIDInput
  and: [ModelTagConditionInput]
  or: [ModelTagConditionInput]
  not: ModelTagConditionInput
}

input CreateTagInput {
  id: ID
  name: String
  slug: String
  details: String
  image: AttachmentInput
  icon: String
  typeID: ID!
  _version: Int
}

input UpdateTagInput {
  id: ID!
  name: String
  slug: String
  details: String
  image: AttachmentInput
  icon: String
  typeID: ID
  _version: Int
}

input DeleteTagInput {
  id: ID!
  _version: Int
}

input PaymentInfoInput {
  account: String
  name: String
  email: String
  bank: String
}

type ModelBalanceConnection @aws_api_key @aws_iam {
  items: [Balance]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelBalanceFilterInput {
  id: ModelIDInput
  adminCommissionRate: ModelStringInput
  totalEarnings: ModelStringInput
  withdrawnAmount: ModelStringInput
  currentBalance: ModelStringInput
  and: [ModelBalanceFilterInput]
  or: [ModelBalanceFilterInput]
  not: ModelBalanceFilterInput
}

input ModelBalanceConditionInput {
  adminCommissionRate: ModelStringInput
  totalEarnings: ModelStringInput
  withdrawnAmount: ModelStringInput
  currentBalance: ModelStringInput
  and: [ModelBalanceConditionInput]
  or: [ModelBalanceConditionInput]
  not: ModelBalanceConditionInput
}

input CreateBalanceInput {
  id: ID
  adminCommissionRate: String
  totalEarnings: String
  withdrawnAmount: String
  currentBalance: String
  paymentInfo: PaymentInfoInput
  _version: Int
}

input UpdateBalanceInput {
  id: ID!
  adminCommissionRate: String
  totalEarnings: String
  withdrawnAmount: String
  currentBalance: String
  paymentInfo: PaymentInfoInput
  _version: Int
}

input DeleteBalanceInput {
  id: ID!
  _version: Int
}

input UserAddressInput {
  streetAddress: String
  country: String
  city: String
  state: String
  zip: String
}

type ModelOrganizationConnection @aws_api_key @aws_iam {
  items: [Organization]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelOrganizationFilterInput {
  id: ModelIDInput
  isActive: ModelStringInput
  name: ModelStringInput
  slug: ModelStringInput
  description: ModelStringInput
  settings: ModelStringInput
  and: [ModelOrganizationFilterInput]
  or: [ModelOrganizationFilterInput]
  not: ModelOrganizationFilterInput
  organizationBalanceId: ModelIDInput
}

input ModelOrganizationConditionInput {
  isActive: ModelStringInput
  name: ModelStringInput
  slug: ModelStringInput
  description: ModelStringInput
  settings: ModelStringInput
  and: [ModelOrganizationConditionInput]
  or: [ModelOrganizationConditionInput]
  not: ModelOrganizationConditionInput
  organizationBalanceId: ModelIDInput
}

input CreateOrganizationInput {
  id: ID
  isActive: String
  name: String
  slug: String
  description: String
  coverImage: AttachmentInput
  logo: AttachmentInput
  address: UserAddressInput
  settings: String
  _version: Int
  organizationBalanceId: ID
}

input UpdateOrganizationInput {
  id: ID!
  isActive: String
  name: String
  slug: String
  description: String
  coverImage: AttachmentInput
  logo: AttachmentInput
  address: UserAddressInput
  settings: String
  _version: Int
  organizationBalanceId: ID
}

input DeleteOrganizationInput {
  id: ID!
  _version: Int
}

type ModelShippingConnection @aws_api_key @aws_iam {
  items: [Shipping]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelShippingTypeInput {
  eq: ShippingType
  ne: ShippingType
}

input ModelShippingFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  amount: ModelStringInput
  isGlobal: ModelStringInput
  type: ModelShippingTypeInput
  and: [ModelShippingFilterInput]
  or: [ModelShippingFilterInput]
  not: ModelShippingFilterInput
}

input ModelShippingConditionInput {
  name: ModelStringInput
  amount: ModelStringInput
  isGlobal: ModelStringInput
  type: ModelShippingTypeInput
  and: [ModelShippingConditionInput]
  or: [ModelShippingConditionInput]
  not: ModelShippingConditionInput
}

input CreateShippingInput {
  id: ID
  name: String
  amount: String
  isGlobal: String
  type: ShippingType
  _version: Int
}

input UpdateShippingInput {
  id: ID!
  name: String
  amount: String
  isGlobal: String
  type: ShippingType
  _version: Int
}

input DeleteShippingInput {
  id: ID!
  _version: Int
}

input EntityVariationOptionInput {
  name: String
  value: String
}

type ModelEntityVariationConnection @aws_api_key @aws_iam {
  items: [EntityVariation]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelEntityVariationFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  price: ModelFloatInput
  sku: ModelStringInput
  isDisable: ModelBooleanInput
  salePrice: ModelFloatInput
  quantity: ModelIntInput
  and: [ModelEntityVariationFilterInput]
  or: [ModelEntityVariationFilterInput]
  not: ModelEntityVariationFilterInput
}

input ModelEntityVariationConditionInput {
  title: ModelStringInput
  price: ModelFloatInput
  sku: ModelStringInput
  isDisable: ModelBooleanInput
  salePrice: ModelFloatInput
  quantity: ModelIntInput
  and: [ModelEntityVariationConditionInput]
  or: [ModelEntityVariationConditionInput]
  not: ModelEntityVariationConditionInput
}

input CreateEntityVariationInput {
  id: ID
  title: String
  price: Float
  sku: String
  isDisable: Boolean
  salePrice: Float
  quantity: Int
  options: EntityVariationOptionInput
  _version: Int
}

input UpdateEntityVariationInput {
  id: ID!
  title: String
  price: Float
  sku: String
  isDisable: Boolean
  salePrice: Float
  quantity: Int
  options: EntityVariationOptionInput
  _version: Int
}

input DeleteEntityVariationInput {
  id: ID!
  _version: Int
}

type ModelEntityConnection @aws_iam @aws_api_key {
  items: [Entity]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelEntityTypeInput {
  eq: EntityType
  ne: EntityType
}

input ModelEntityStatusInput {
  eq: EntityStatus
  ne: EntityStatus
}

input ModelEntityFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  slug: ModelStringInput
  entityType: ModelEntityTypeInput
  description: ModelStringInput
  inStock: ModelBooleanInput
  isTaxable: ModelStringInput
  salePrice: ModelStringInput
  maxPrice: ModelStringInput
  minPrice: ModelStringInput
  sku: ModelStringInput
  status: ModelEntityStatusInput
  height: ModelStringInput
  lenght: ModelStringInput
  width: ModelStringInput
  price: ModelFloatInput
  quantity: ModelIntInput
  unit: ModelStringInput
  orderID: ModelIDInput
  organizationID: ModelIDInput
  tagID: ModelIDInput
  typeID: ModelIDInput
  and: [ModelEntityFilterInput]
  or: [ModelEntityFilterInput]
  not: ModelEntityFilterInput
}

input ModelEntityConditionInput {
  name: ModelStringInput
  slug: ModelStringInput
  entityType: ModelEntityTypeInput
  description: ModelStringInput
  inStock: ModelBooleanInput
  isTaxable: ModelStringInput
  salePrice: ModelStringInput
  maxPrice: ModelStringInput
  minPrice: ModelStringInput
  sku: ModelStringInput
  status: ModelEntityStatusInput
  height: ModelStringInput
  lenght: ModelStringInput
  width: ModelStringInput
  price: ModelFloatInput
  quantity: ModelIntInput
  unit: ModelStringInput
  orderID: ModelIDInput
  organizationID: ModelIDInput
  tagID: ModelIDInput
  typeID: ModelIDInput
  and: [ModelEntityConditionInput]
  or: [ModelEntityConditionInput]
  not: ModelEntityConditionInput
}

input CreateEntityInput {
  id: ID
  name: String
  slug: String
  entityType: EntityType
  description: String
  inStock: Boolean
  isTaxable: String
  salePrice: String
  maxPrice: String
  minPrice: String
  sku: String
  gallery: [AttachmentInput]
  image: AttachmentInput
  status: EntityStatus
  height: String
  lenght: String
  width: String
  price: Float
  quantity: Int
  unit: String
  orderID: ID!
  organizationID: ID!
  tagID: ID!
  typeID: ID!
  _version: Int
}

input UpdateEntityInput {
  id: ID!
  name: String
  slug: String
  entityType: EntityType
  description: String
  inStock: Boolean
  isTaxable: String
  salePrice: String
  maxPrice: String
  minPrice: String
  sku: String
  gallery: [AttachmentInput]
  image: AttachmentInput
  status: EntityStatus
  height: String
  lenght: String
  width: String
  price: Float
  quantity: Int
  unit: String
  orderID: ID
  organizationID: ID
  tagID: ID
  typeID: ID
  _version: Int
}

input DeleteEntityInput {
  id: ID!
  _version: Int
}

type ModelOrderConnection @aws_iam @aws_api_key @aws_cognito_user_pools {
  items: [Order]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelPaymentGatewayInput {
  eq: PaymentGateway
  ne: PaymentGateway
}

input ModelOrderFilterInput {
  id: ModelIDInput
  trakingNumber: ModelStringInput
  amount: ModelStringInput
  paidTotal: ModelStringInput
  discount: ModelStringInput
  deliveryFee: ModelStringInput
  deliveryTime: ModelStringInput
  paymentGateway: ModelPaymentGatewayInput
  couponID: ModelIDInput
  userID: ModelIDInput
  organizationID: ModelIDInput
  and: [ModelOrderFilterInput]
  or: [ModelOrderFilterInput]
  not: ModelOrderFilterInput
}

input ModelOrderConditionInput {
  trakingNumber: ModelStringInput
  amount: ModelStringInput
  paidTotal: ModelStringInput
  discount: ModelStringInput
  deliveryFee: ModelStringInput
  deliveryTime: ModelStringInput
  paymentGateway: ModelPaymentGatewayInput
  couponID: ModelIDInput
  userID: ModelIDInput
  organizationID: ModelIDInput
  and: [ModelOrderConditionInput]
  or: [ModelOrderConditionInput]
  not: ModelOrderConditionInput
}

input CreateOrderInput {
  id: ID
  trakingNumber: String
  amount: String
  paidTotal: String
  discount: String
  deliveryFee: String
  deliveryTime: String
  billingAddress: UserAddressInput
  shippingAddress: UserAddressInput
  paymentGateway: PaymentGateway
  couponID: ID!
  userID: ID!
  organizationID: ID!
  _version: Int
}

input UpdateOrderInput {
  id: ID!
  trakingNumber: String
  amount: String
  paidTotal: String
  discount: String
  deliveryFee: String
  deliveryTime: String
  billingAddress: UserAddressInput
  shippingAddress: UserAddressInput
  paymentGateway: PaymentGateway
  couponID: ID
  userID: ID
  organizationID: ID
  _version: Int
}

input DeleteOrderInput {
  id: ID!
  _version: Int
}

type ModelCouponConnection @aws_api_key @aws_iam @aws_cognito_user_pools {
  items: [Coupon]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelCouponTypeInput {
  eq: CouponType
  ne: CouponType
}

input ModelCouponFilterInput {
  id: ModelIDInput
  code: ModelStringInput
  description: ModelStringInput
  type: ModelCouponTypeInput
  isValid: ModelBooleanInput
  amount: ModelFloatInput
  activeFrom: ModelStringInput
  expireAt: ModelStringInput
  and: [ModelCouponFilterInput]
  or: [ModelCouponFilterInput]
  not: ModelCouponFilterInput
}

input ModelCouponConditionInput {
  code: ModelStringInput
  description: ModelStringInput
  type: ModelCouponTypeInput
  isValid: ModelBooleanInput
  amount: ModelFloatInput
  activeFrom: ModelStringInput
  expireAt: ModelStringInput
  and: [ModelCouponConditionInput]
  or: [ModelCouponConditionInput]
  not: ModelCouponConditionInput
}

input CreateCouponInput {
  id: ID
  code: String
  description: String
  type: CouponType
  image: AttachmentInput
  isValid: Boolean
  amount: Float
  activeFrom: String
  expireAt: String
  _version: Int
}

input UpdateCouponInput {
  id: ID!
  code: String
  description: String
  type: CouponType
  image: AttachmentInput
  isValid: Boolean
  amount: Float
  activeFrom: String
  expireAt: String
  _version: Int
}

input DeleteCouponInput {
  id: ID!
  _version: Int
}

type ModelContactConnection @aws_api_key @aws_iam {
  items: [Contact]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelContactFilterInput {
  id: ModelIDInput
  subject: ModelStringInput
  email: ModelStringInput
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelContactFilterInput]
  or: [ModelContactFilterInput]
  not: ModelContactFilterInput
}

input ModelContactConditionInput {
  subject: ModelStringInput
  email: ModelStringInput
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelContactConditionInput]
  or: [ModelContactConditionInput]
  not: ModelContactConditionInput
}

input CreateContactInput {
  id: ID
  subject: String
  email: String
  name: String
  description: String
  _version: Int
}

input UpdateContactInput {
  id: ID!
  subject: String
  email: String
  name: String
  description: String
  _version: Int
}

input DeleteContactInput {
  id: ID!
  _version: Int
}

type ModelCategoryConnection @aws_iam @aws_api_key @aws_cognito_user_pools {
  items: [Category]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelCategoryFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  slug: ModelStringInput
  details: ModelStringInput
  icon: ModelStringInput
  typeID: ModelIDInput
  and: [ModelCategoryFilterInput]
  or: [ModelCategoryFilterInput]
  not: ModelCategoryFilterInput
}

input ModelCategoryConditionInput {
  name: ModelStringInput
  slug: ModelStringInput
  details: ModelStringInput
  icon: ModelStringInput
  typeID: ModelIDInput
  and: [ModelCategoryConditionInput]
  or: [ModelCategoryConditionInput]
  not: ModelCategoryConditionInput
}

input CreateCategoryInput {
  id: ID
  name: String
  slug: String
  details: String
  image: AttachmentInput
  icon: String
  typeID: ID!
  _version: Int
}

input UpdateCategoryInput {
  id: ID!
  name: String
  slug: String
  details: String
  image: AttachmentInput
  icon: String
  typeID: ID
  _version: Int
}

input DeleteCategoryInput {
  id: ID!
  _version: Int
}

input AttributeValueInput {
  id: Int
  value: String
  meta: String
}

type ModelAttributeConnection @aws_iam @aws_api_key @aws_cognito_user_pools {
  items: [Attribute]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelAttributeFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  slug: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelAttributeFilterInput]
  or: [ModelAttributeFilterInput]
  not: ModelAttributeFilterInput
}

input ModelAttributeConditionInput {
  name: ModelStringInput
  slug: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelAttributeConditionInput]
  or: [ModelAttributeConditionInput]
  not: ModelAttributeConditionInput
}

input CreateAttributeInput {
  id: ID
  name: String
  slug: String
  organizationID: ID!
  values: AttributeValueInput
  _version: Int
}

input UpdateAttributeInput {
  id: ID!
  name: String
  slug: String
  organizationID: ID
  values: AttributeValueInput
  _version: Int
}

input DeleteAttributeInput {
  id: ID!
  _version: Int
}

input ProfileInput {
  id: String
  avatar: AttachmentInput
  bio: String
  socials: [SocialInput!]
  contact: String
}

input SocialInput {
  type: String
  link: String
}

type ModelUserConnection @aws_iam @aws_api_key {
  items: [User]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUserFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  email: ModelStringInput
  isActiive: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelUserFilterInput]
  or: [ModelUserFilterInput]
  not: ModelUserFilterInput
}

input ModelUserConditionInput {
  name: ModelStringInput
  email: ModelStringInput
  isActiive: ModelStringInput
  organizationID: ModelIDInput
  and: [ModelUserConditionInput]
  or: [ModelUserConditionInput]
  not: ModelUserConditionInput
}

input CreateUserInput {
  id: ID
  name: String
  email: String
  isActiive: String
  organizationID: ID!
  profile: ProfileInput
  _version: Int
}

input UpdateUserInput {
  id: ID!
  name: String
  email: String
  isActiive: String
  organizationID: ID
  profile: ProfileInput
  _version: Int
}

input DeleteUserInput {
  id: ID!
  _version: Int
}

type ModelAddressConnection @aws_iam @aws_cognito_user_pools {
  items: [Address]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelAddressTypeInput {
  eq: AddressType
  ne: AddressType
}

input ModelAddressFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  default: ModelBooleanInput
  type: ModelAddressTypeInput
  and: [ModelAddressFilterInput]
  or: [ModelAddressFilterInput]
  not: ModelAddressFilterInput
}

input ModelAddressConditionInput {
  title: ModelStringInput
  default: ModelBooleanInput
  type: ModelAddressTypeInput
  and: [ModelAddressConditionInput]
  or: [ModelAddressConditionInput]
  not: ModelAddressConditionInput
}

input CreateAddressInput {
  id: ID
  title: String
  default: Boolean
  address: UserAddressInput
  type: AddressType
  _version: Int
}

input UpdateAddressInput {
  id: ID!
  title: String
  default: Boolean
  address: UserAddressInput
  type: AddressType
  _version: Int
}

input DeleteAddressInput {
  id: ID!
  _version: Int
}

type ModelUserOrganizationConnection @aws_iam @aws_api_key {
  items: [UserOrganization]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelUserOrganizationFilterInput {
  id: ModelIDInput
  organizationID: ModelIDInput
  userID: ModelIDInput
  and: [ModelUserOrganizationFilterInput]
  or: [ModelUserOrganizationFilterInput]
  not: ModelUserOrganizationFilterInput
}

input ModelUserOrganizationConditionInput {
  organizationID: ModelIDInput
  userID: ModelIDInput
  and: [ModelUserOrganizationConditionInput]
  or: [ModelUserOrganizationConditionInput]
  not: ModelUserOrganizationConditionInput
}

input CreateUserOrganizationInput {
  id: ID
  organizationID: ID!
  userID: ID!
  _version: Int
}

input UpdateUserOrganizationInput {
  id: ID!
  organizationID: ID
  userID: ID
  _version: Int
}

input DeleteUserOrganizationInput {
  id: ID!
  _version: Int
}

type ModelEntityCategoryConnection @aws_iam @aws_api_key @aws_cognito_user_pools {
  items: [EntityCategory]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelEntityCategoryFilterInput {
  id: ModelIDInput
  entityID: ModelIDInput
  categoryID: ModelIDInput
  and: [ModelEntityCategoryFilterInput]
  or: [ModelEntityCategoryFilterInput]
  not: ModelEntityCategoryFilterInput
}

input ModelEntityCategoryConditionInput {
  entityID: ModelIDInput
  categoryID: ModelIDInput
  and: [ModelEntityCategoryConditionInput]
  or: [ModelEntityCategoryConditionInput]
  not: ModelEntityCategoryConditionInput
}

input CreateEntityCategoryInput {
  id: ID
  entityID: ID!
  categoryID: ID!
  _version: Int
}

input UpdateEntityCategoryInput {
  id: ID!
  entityID: ID
  categoryID: ID
  _version: Int
}

input DeleteEntityCategoryInput {
  id: ID!
  _version: Int
}

